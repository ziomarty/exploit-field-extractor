package it.mutinanet.exploitextractor;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

import com.itextpdf.text.Document;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfImportedPage;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfWriter;

public class PdfHelper {
	/**
	 * @author viralpatel.net
	 * 
	 * @param inputStream
	 *            Input PDF file
	 * @param outputStream
	 *            Output PDF file
	 * @param fromPage
	 *            start page from input PDF file
	 * @param toPage
	 *            end page from input PDF file
	 */
	public static void splitPDF(PdfReader inputPDF, String outPutFileName,
			int fromPage, int toPage) {
		FileOutputStream outputStream;
		try {
			outputStream = new FileOutputStream(outPutFileName);
			Document document = new Document();
			try {

				int totalPages = inputPDF.getNumberOfPages();

				// make fromPage equals to toPage if it is greater
				if (fromPage > toPage) {
					fromPage = toPage;
				}
				if (toPage > totalPages) {
					toPage = totalPages;
				}

				// Create a writer for the outputstream
				PdfWriter writer = PdfWriter
						.getInstance(document, outputStream);

				document.open();
				PdfContentByte cb = writer.getDirectContent(); // Holds the PDF
																// data
				PdfImportedPage page;

				while (fromPage <= toPage) {
					document.newPage();
					page = writer.getImportedPage(inputPDF, fromPage);
					cb.addTemplate(page, 0, 0);
					fromPage++;
				}
				outputStream.flush();
				document.close();
				outputStream.close();
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				if (document.isOpen())
					document.close();
				try {
					if (outputStream != null)
						outputStream.close();
				} catch (IOException ioe) {
					ioe.printStackTrace();
				}
			}

		} catch (FileNotFoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
	}

}
