package it.mutinanet.exploitextractor;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Properties;

import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;

import org.apache.commons.io.IOUtils;
import org.apache.logging.log4j.Logger;

public class EmailUtils {

	public static BodyPart getFileBodyPart(String filename) throws javax.mail.MessagingException {
		BodyPart bp = new MimeBodyPart();
		bp.setDataHandler(new DataHandler(new FileDataSource(filename)));
		return bp;
	}

	public static void sendEmail(String to, String from, String host, String subject, String bodyTextFilePath)
			throws IOException {
		Properties properties = System.getProperties();
		// Logger.getRootLogger().info("Tentativo Invio Email " + subject);
		// Setup mail server
		properties.setProperty("mail.smtp.host", host);

		// Get the default Session object.
		Session session = Session.getDefaultInstance(properties);

		try {
			// Create a default MimeMessage object.
			MimeMessage message = new MimeMessage(session);

			// Set From: header field of the header.
			message.setFrom(new InternetAddress(from));

			// Set To: header field of the header.
			message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));

			// Set Subject: header field
			message.setSubject(subject);
			// Create the message part
			BodyPart messageBodyPart = new MimeBodyPart();

			// Fill the message
			// messageBodyPart.setText(messageText);
			FileInputStream fis = new FileInputStream(bodyTextFilePath);
			String StringFromInputStream = IOUtils.toString(fis, "UTF-8");
			messageBodyPart.setContent(StringFromInputStream, "text/html");

			// // Create a multipar message
			Multipart multipart = new MimeMultipart();
			//
			// // Set text message part
			multipart.addBodyPart(messageBodyPart);
			//
			// messageBodyPart = new MimeBodyPart();
			//
			// // Part two is attachment
			// messageBodyPart = new MimeBodyPart();

			// multipart.addBodyPart(messageBodyPart);

			// Send the complete message parts
			message.setContent(multipart);

			// Send message
			Transport.send(message);
			// Logger.getRootLogger().debug("Email inviata correttamente " +
			// subject);

		} catch (Exception ex) {
			// Logger.getRootLogger().debug("Errore invio email " + subject);
			// Logger.getRootLogger().info(ex);
		}

	}

	public static void sendEmailWithAttachment(String to, String from, String host, File file, String subject,
			String bodyTextFilePath, File image) throws IOException {

		// Get system properties
		Properties properties = System.getProperties();

		// Setup mail server
		properties.setProperty("mail.smtp.host", host);

		// Get the default Session object.
		Session session = Session.getDefaultInstance(properties);

		try {
			// Create a default MimeMessage object.
			MimeMessage message = new MimeMessage(session);

			// Set From: header field of the header.
			message.setFrom(new InternetAddress(from));

			// Set To: header field of the header.
			message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));

			// Set Subject: header field
			message.setSubject(subject);

			// Create the message part
			BodyPart messageBodyPart = new MimeBodyPart();

			// Fill the message
			// messageBodyPart.setText(messageText);
			FileInputStream fis = new FileInputStream(bodyTextFilePath);
			String StringFromInputStream = IOUtils.toString(fis, "UTF-8");
			messageBodyPart.setContent(StringFromInputStream, "text/html");

			// Create a multipar message
			Multipart multipart = new MimeMultipart();

			// Set text message part
			multipart.addBodyPart(messageBodyPart);

			messageBodyPart = new MimeBodyPart();

			DataSource sourceImage = new FileDataSource(image);
			messageBodyPart.setDataHandler(new DataHandler(sourceImage));
			((FileDataSource) sourceImage).getFile().getAbsolutePath();
			messageBodyPart.setFileName(((FileDataSource) sourceImage).getFile().getName());
			multipart.addBodyPart(messageBodyPart);
			// Part two is attachment
			messageBodyPart = new MimeBodyPart();

			DataSource source = new FileDataSource(file);
			messageBodyPart.setDataHandler(new DataHandler(source));
			((FileDataSource) source).getFile().getAbsolutePath();
			messageBodyPart.setFileName(((FileDataSource) source).getFile().getName());
			multipart.addBodyPart(messageBodyPart);

			// Send the complete message parts
			message.setContent(multipart);

			// Send message
			Transport.send(message);
			System.out.println(subject + " Sent message successfully....");
		} catch (MessagingException mex) {
			mex.printStackTrace();
		}
	}
}